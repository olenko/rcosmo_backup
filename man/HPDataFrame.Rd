% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HPDataFrame.R
\name{HPDataFrame}
\alias{HPDataFrame}
\title{HPDataFrame class}
\usage{
HPDataFrame(..., nside, ordering = "nested", auto.spix = FALSE, spix,
  assumedUniquePix = FALSE, delete.duplicates = FALSE)
}
\arguments{
\item{...}{Data. Can be named vectors or a data.frame. May
include columns (x,y,z) or (theta, phi) representing
Cartesian or spherical coordinates
of points on the unit sphere.}

\item{nside}{Integer number \eqn{2^k}, the nside
parameter, i.e, resolution. If \code{nside} is unspecified, then
the an attempt is made to use columns x,y and z from the provided
data, as Cartesian coordinates, to calculate an nside that is
sufficient to ensure all points belong to unique pixels.}

\item{ordering}{The HEALPix ordering scheme ("ring" or "nested").}

\item{auto.spix}{Boolean. If TRUE then spix will be found from
the coordinates provided in the data. That is, each row of
data will be assigned the pixel index of its closest HEALPix
pixel center. There must be columns x,y,z for cartesian or
theta, phi for spherical colatitude and longitude respectively.
If \code{auto.spix = FALSE} then \code{nside} must be specified.}

\item{spix}{A vector of HEALPix pixel indices indicating the
pixel locations of the data. Note that \code{spix} is ignored
if \code{auto.spix = TRUE}.}

\item{assumedUniquePix}{A boolean. Sets the \code{assumedUniquePix}
attribute of the HPDataFrame. This attribute indicates whether
or not the rows of a HPDataFrame can be assumed to belong to
unique pixels.}

\item{delete.duplicates}{Boolean. If TRUE then rows
corresponding to duplicate pixel indices will be dropped
from the returned HPDataFrame, and assumedUniquePix will
be set to TRUE.}
}
\description{
HPDataFrames are a type of \code{data.frame} designed to carry
data located on the unit sphere. Each row of a \code{HPDataFrame}
is associated with a HEALPix pixel index. The \code{HPDataFrame}
also holds an attribute called \code{nside} which stores the
HEALPix Nside parameter (i.e., the resolution of the HEALPix grid
that is being used).
Unlike \code{\link{CMBDataFrame}}, HPDataFrames may have
repeated pixel indices. They are made this way so that
multiple data points falling within a given pixel
can be stored in different rows of any given HPDataFrame.
}
\details{
\code{HPDataFrame} with \code{auto.spix = TRUE} can be used to transform any
spherical data (not necessarily CMB) to the Healpix representation, see
Example 3 below.
}
\examples{

##Example 1.

hp1 <- HPDataFrame(I=rnorm(5), nside = 1, spix = c(1,1,2,2,3))
pix(hp1)
coords(hp1, new.coords = "cartesian")
class(hp1)
assumedUniquePix(hp1)

##Example 2.

# Where nside is not specified
sky <- CMBDataFrame(nside = 32, coords = "cartesian", ordering = "nested")
sky.s <- CMBDataFrame(sky, sample.size = 100)
hpdf <- HPDataFrame(sky.s, auto.spix = TRUE)
class(hpdf)
assumedUniquePix(hpdf)

##Example 3.
#
## With earth data.
## Download World Cities Database from
## https://simplemaps.com/static/data/world-cities/basic/simplemaps_worldcities_basicv1.4.zip
## unpack the file worldcities.csv
#
# worldcities <- read.csv("worldcities.csv")
# uscities <- worldcities[worldcities$country == "United States",]
#
# Prepare a data frame with cities' coordinates
# usdf <- data.frame(phi = pi/180*uscities$lng, theta = pi/2 - pi/180*uscities$lat,
#                  I=rep(1,length(uscities$lng)))
#
# Select k cities with different coordinates
# k <- 1000
# usdf <- usdf[sample(nrow(usdf), k), ]
# plot(usdf$phi, usdf$theta)
# usdf[duplicated(usdf), ]
# usdf<- usdf[!duplicated(usdf), ]
# usdf[duplicated(usdf), ]
# usdf <- coords(usdf, new.coords = "cartesian")
#
# Create and plot the corresponding HPDataFrame with unique pixels
# ushp <- HPDataFrame(usdf, auto.spix = TRUE)
# plot(ushp, size = 2)

}
